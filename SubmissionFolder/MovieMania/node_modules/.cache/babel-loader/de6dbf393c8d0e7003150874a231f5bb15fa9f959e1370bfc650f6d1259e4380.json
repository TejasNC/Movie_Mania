{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejas\\\\OneDrive\\\\Desktop\\\\projects\\\\Movie Mania\\\\SubmissionFolder\\\\MovieMania\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const username = localStorage.getItem(\"username\"); /* We willl set the text in the user/logIn button to the username if the username string is not empty */\n  const [search, setSearch] = useState(\"\");\n  /* search is the name text contained in the searchBar. */\n  const navigate = useNavigate(); /* Here we are using the navigate function to go to the movie page on clicking the submit button. */\n\n  const handleSubmit = async e => {\n    console.log(search);\n    e.preventDefault(); /*This is to prevent submission on page reload and rendering*/\n    try {\n      const response = await fetch(\"http://localhost:8000/search/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          search_query: search\n        })\n      });\n      if (response.ok) {\n        const search_result = await response.json();\n        console.log(\"Search submitted successfully\", search_result[0].name); /* consle log the name of the movie with the highest similarity_ratio */\n        navigate(`/Movie_Page/${search_result[0].name}`); /*navigate to the page of the movie with the highest similarity ratio*/\n      } else {\n        console.log(\"Error: Resposne not okay!\");\n      }\n    } catch (error) {\n      console.error(\"Error: \", error);\n    }\n  };\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-expand-sl navbar-dark bg-dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"/home\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"logo.png\",\n          id: \"Logo\",\n          alt: \"Movie Mania\",\n          width: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-inline my-2 my-lg-0 mx-auto\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mr-sm-2\",\n          type: \"search\",\n          placeholder: \"Search movies...\",\n          \"aria-label\": \"Search\",\n          value: search /* We are setting the value of the search state variable to the content in the box */,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-warning my-2 my-sm-0\" /* Removing the margin of the button so that it appers in flush with other elements */,\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-warning ml-auto\",\n          type: \"button\",\n          children: [username == null || username == \"\" ? \"Sign Up / LogIn\" : username, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"4gvbkWouEEyoDsqVavJcQaOB+7E=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Navbar","_s","username","localStorage","getItem","search","setSearch","navigate","handleSubmit","e","console","log","preventDefault","response","fetch","method","headers","body","JSON","stringify","search_query","ok","search_result","json","name","error","handleChange","target","value","className","children","href","src","id","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/tejas/OneDrive/Desktop/projects/Movie Mania/SubmissionFolder/MovieMania/src/components/Navbar.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const username =\r\n    localStorage.getItem(\r\n      \"username\"\r\n    ); /* We willl set the text in the user/logIn button to the username if the username string is not empty */\r\n  const [search, setSearch] = useState(\"\");\r\n  /* search is the name text contained in the searchBar. */\r\n  const navigate =\r\n    useNavigate(); /* Here we are using the navigate function to go to the movie page on clicking the submit button. */\r\n\r\n  const handleSubmit = async (e) => {\r\n    console.log(search);\r\n    e.preventDefault(); /*This is to prevent submission on page reload and rendering*/\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/search/\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ search_query: search }),\r\n      });\r\n      if (response.ok) {\r\n        const search_result = await response.json();\r\n        console.log(\r\n          \"Search submitted successfully\",\r\n          search_result[0].name\r\n        ); /* consle log the name of the movie with the highest similarity_ratio */\r\n        navigate(\r\n          `/Movie_Page/${search_result[0].name}`\r\n        ); /*navigate to the page of the movie with the highest similarity ratio*/\r\n      } else {\r\n        console.log(\"Error: Resposne not okay!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error: \", error);\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sl navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        {/* Image tag on the leftmost side with reference to the home page */}\r\n        <a className=\"navbar-brand\" href=\"/home\">\r\n          <img src=\"logo.png\" id=\"Logo\" alt=\"Movie Mania\" width={60} />\r\n        </a>\r\n        {/* Search bar in the middle */}\r\n        <form\r\n          className=\"form-inline my-2 my-lg-0 mx-auto\"\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <input\r\n            className=\"form-control mr-sm-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search movies...\"\r\n            aria-label=\"Search\"\r\n            value={\r\n              search\r\n            } /* We are setting the value of the search state variable to the content in the box */\r\n            onChange={handleChange}\r\n          />\r\n          <button\r\n            className=\"btn btn-outline-warning my-2 my-sm-0\" /* Removing the margin of the button so that it appers in flush with other elements */\r\n            type=\"submit\"\r\n          >\r\n            Search\r\n          </button>\r\n        </form>\r\n        {/* SignIn button on the right */}\r\n        <a href=\"/login\">\r\n          <button className=\"btn btn-outline-warning ml-auto\" type=\"button\">\r\n            {username == null || username == \"\" ? \"Sign Up / LogIn\" : username}  {/* If the submit button has been clicked once, the string will be empty otherwise it will be none. */}\r\n          </button> \r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}